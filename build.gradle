buildscript {
    apply from: "${rootProject.projectDir}/common.gradle"
    repositories {
        mavenLocal()
        mavenCentral()

        maven {
            url "https://plugins.gradle.org/m2/"

        }
        maven {
            url 'https://repo.spring.io/libs-snapshot'
        }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${version_springboot}"
    }
}

plugins {
    id 'java'
    id 'idea'
    id 'checkstyle'

}


group = "${group_name}"
archivesBaseName = "${project_name}"
version = "${project_version}"



sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven {
        url 'https://repo.spring.io/libs-snapshot'
    }
}

dependencies {

    compile project(':customer')

    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.11'

    testCompile group: 'junit', name: 'junit', version: version_junit
}

allprojects {

    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'io.spring.dependency-management'

    dependencyManagement {
        imports {
            mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
        }
    }

    configurations {
        compile.exclude module: "lettuce"
    }
    dependencies {
// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-test
        testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test'

        compile('org.springframework.boot:spring-boot-starter-web')
        compile('org.springframework.boot:spring-boot-starter-redis')
        compile group: 'org.springframework.boot', name: 'spring-boot-starter-redis', version: '1.4.7.RELEASE'

//        compile("redis.clients:jedis")
        compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.11'
        compile 'javax.servlet:javax.servlet-api:3.1.0'
        compileOnly "org.springframework.boot:spring-boot-configuration-processor"
        compile group: 'com.alibaba', name: 'fastjson', version: '1.2.47'

    }

    task "createJavaProject" << {
        sourceSets*.java.srcDirs*.each { it.mkdirs() }
        sourceSets*.resources.srcDirs*.each { it.mkdirs() }
    }
}

